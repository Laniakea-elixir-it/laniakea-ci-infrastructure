## python configuration
galaxy_virtualenv_command: /usr/bin/python3 -m virtualenv

##postgresql configuration
postgresql_version: 11
postgresql_objects_users:
  - name: galaxy
postgresql_objects_databases:
  - name: galaxy
  - name: galaxy_tools

## Path configuration
export_dir: /export

## Galaxy configuration
galaxy_create_user: true
galaxy_force_checkout: true
galaxy_separate_privileges: yes
galaxy_manage_paths: true
galaxy_layout: root-dir
galaxy_privsep_user: galaxy
galaxy_user: { name: galaxy, shell: /bin/bash, uid: 5001}
galaxy_group: { name: galaxy, gid: 5001 }
galaxy_root: /home/galaxy/galaxy
galaxy_server_dir: '{{ galaxy_root }}/server' 
galaxy_mutable_config_dir: '{{ galaxy_root }}/config' 
galaxy_config_file: '{{ galaxy_mutable_config_dir }}/galaxy.yml' 
galaxy_commit_id: release_22.04
galaxy_config_style: yaml
galaxy_config:
  galaxy:
    brand: "laniakea-express"
    admin_users: "admin@server.com"
    database_connection: "postgresql:///galaxy?host=/var/run/postgresql"
    install_database_connection: "postgresql:///galaxy_tools?host=/var/run/postgresql"
    check_migrate_tools: false
    allow_user_creation: "True"
    allow_user_impersonation: "True"
    new_user_dataset_access_role_default_private: "True"
    #conda_auto_install: true
    ##
    file_path: '{{ export_dir }}'
    tool_dependency_dir: '{{ export_dir }}/tool_deps'
    conda_prefix: '{{ export_dir }}/tool_deps/_conda'
    job_working_directory: '{{ export_dir }}/database/job_working_dir'

  gravity:
    process_manager: systemd
    galaxy_root: "{{ galaxy_root }}/server"
    galaxy_user: galaxy
    virtualenv: "{{ galaxy_root }}/venv"
      #app_server: gunicorn
    gunicorn:
      # listening options
      bind: "127.0.0.1:4001"
      # performance options
      workers: 2
      # Other options that will be passed to gunicorn
      extra_args: '--forwarded-allow-ips="*"'
      preload: true
    celery:
      concurrency: 2
      loglevel: DEBUG
    handlers:
      handler:
        processes: 3
        pools:
          - job-handler
          - workflow-scheduler
    tusd:
      enable: true
      tusd_path: /usr/local/sbin/tusd
      upload_dir: "{{ export_dir }}/database/tus"

## systemd
galaxy_manage_systemd: yes

## nginx
nginx_selinux_allow_local_connections: true
nginx_flavor: galaxy
nginx_servers:
  - galaxy
nginx_enable_default_server: false
nginx_conf_http:
        # server_tokens: off
  client_max_body_size: 1g
nginx_conf_user: galaxy
nginx_conf_group: galaxy

enable_galaxy_ie: false
enable_interactive_tools: false

database_path: '{{ export_dir }}/database'
##miniconda test
miniconda_prefix: '{{ export_dir }}/tool_deps/_conda'
