---
- hosts: default
  become: true
  become_user: root

  vars:
    robot_key_pub: 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMZ6M41F4sf9ipRutlCNxGxpSNT9snjwIhaWbNiGKIr9 ma.tangaro@gmail.com' # usegalaxy-it robot

  pre_tasks:
    - name: 'Inject robot ssh public key for debug - root'
      authorized_key:
        user: 'root'
        key: '{{ robot_key_pub }}'
      ignore_errors: true

    - name: Install Packages
      ansible.builtin.dnf:
        name: 
          - langpacks-en
          - glibc-all-langpacks
          - epel-release
          - python3-wheel-wheel
        enablerepo: crb
        state: present
    - name: Install python3-virtualenv
      yum:
        name: python3-virtualenv
        enablerepo: epel-release
        state: present
    - name: Install Galaxy Dependencies
      package:
        name:
          - acl
          - bzip2
          - git
          - make
          - python-psycopg2
          - python3-psycopg2
          - tar
          - gcc
          - openssl-devel
          - bzip2-devel
          - libffi-devel
          - zlib-devel
          - xz-devel
          - sqlite-devel
          - wget
    - name: Update ca-certificates
      command: 'yum update -y ca-certificates'
        
    - name: Disable SELinux
      selinux:
        state: disabled

    - name: Ensure the group exists with specified GID
      ansible.builtin.group:
        name: "{{ galaxy_user.groupname }}"
        gid: "{{ galaxy_user.gid }}"
        state: present

    - name: Ensure the user exists with specified UID and primary group
      ansible.builtin.user:
        name: "{{ galaxy_user.name }}"
        uid: "{{ galaxy_user.uid }}"
        group: "{{ galaxy_user.groupname }}"
        home: /opt/galaxy
        state: present
        createhome: no

    - name: SUDO rules for galaxy user
      lineinfile:
        dest: '/etc/sudoers'
        state: present 
        line: '{{ galaxy_user.name }} ALL=(ALL) NOPASSWD:ALL'
        insertafter: EOF

  roles:
    - geerlingguy.pip
    - geerlingguy.ansible
    - galaxyproject.cvmfs
    - geerlingguy.docker
    - usegalaxy_eu.apptainer

  post_tasks:

    - name: Add groups to Galaxy user
      ansible.builtin.user:
        name: '{{ galaxy_user.nameÂ }}'
        groups: docker # we also need to add condor group.
        append: true

    - debug:
        msg: 'DONE'
